import asyncio
from aiogram.types import InputMediaPhoto
from src.database.requests.user_data import get_user_data
from src.modules.check_gender import check_gender
from src.modules.hobbies_list import hobbies_list

import src.modules.keyboard as kb


async def loader(message, text):
    response_message = await message.answer(f'{text}')
    for i in range(1, 4):
        await response_message.edit_text(f'{text} {"‚óã" * i}', parse_mode='HTML')
        await asyncio.sleep(.1)
    for i in range(1, 4):
        symbols = '‚óè' * i + '‚óã' * (3 - i)
        await response_message.edit_text(f'{text} {symbols}', parse_mode='HTML')
        await asyncio.sleep(.1)
    await asyncio.sleep(.3)
    '''try:
        await message.delete()
    except:
        pass'''
    await response_message.delete()


async def notification(message, text):
    temporary_message = await message.answer(f'{text}', parse_mode='HTML')
    await asyncio.sleep(2)
    await temporary_message.delete()
    try:
        await message.delete()
    except:
        pass


async def attention_message(message, text):
    temporary_message = await message.answer(f'{text}', parse_mode='HTML')
    await asyncio.sleep(3)
    try:
        await message.delete()
    except:
        pass
    await temporary_message.delete()

# –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ "–†–µ—à—É –ø–æ–∑–∂–µ" –Ω–∞ –≤—Ö–æ–¥—è—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ª–∞–π–∫–µ


async def notification_to_late_incoming_reaction(message, user_tg_id):
    temporary_message = await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª\n"‚û°Ô∏è <b>–í—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã</b>"',
                                             parse_mode='HTML')
    await asyncio.sleep(3)
    await temporary_message.delete()

    try:
        self_data = await asyncio.to_thread(get_user_data, user_tg_id)
        self_gender = await check_gender(self_data[0][3])
        self_hobbies = await hobbies_list(self_data[1])

        await message.edit_media(media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'<b>–ò–º—è:</b> {self_data[0][0]}\n'
                f'<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {self_data[0][4]}\n'
                f'<b>–ü–æ–ª:</b> {self_gender}\n'
                f'<b>–ì–æ—Ä–æ–¥:</b> {self_data[0][5]}\n'
                f'<b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
            ),
            parse_mode='HTML'
        ),
            reply_markup=kb.users
        )

    except:
        await message.answer_photo(
            photo=f'{self_data[0][1]}',
            caption=(
                f'<b>–ò–º—è:</b> {self_data[0][0]}\n'
                f'<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {self_data[0][4]}\n'
                f'<b>–ü–æ–ª:</b> {self_gender}\n'
                f'<b>–ì–æ—Ä–æ–¥:</b> {self_data[0][5]}\n'
                f'<b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
            ),
            parse_mode='HTML',
            reply_markup=kb.users
        )


# –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∞–∫—Ü–∏–∏


async def bot_notification_about_like(message, name):
    temporary_message = await message.answer('üì¨ –†–µ–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é '
                                             f'<b>{name}</b>.',
                                             parse_mode='HTML')
    await asyncio.sleep(2)
    await temporary_message.delete()

# –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ —Ä–µ–∞–∫—Ü–∏–∏


async def bot_notification_about_dislike(message, text):
    temporary_message = await message.answer(f'{text}', parse_mode='HTML')
    await asyncio.sleep(2)
    await temporary_message.delete()

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–æ—Ç–æ—Ä–æ–≥–æ "–ª–∞–π–∫–Ω—É–ª–∏"


async def bot_send_message_about_like(user_tg_id, current_user_id, bot):

    self_data = await asyncio.to_thread(get_user_data, user_tg_id)
    self_gender = await check_gender(self_data[0][3])
    self_hobbies = await hobbies_list(self_data[1])

    await bot.send_photo(chat_id=current_user_id,
                         photo=f'{self_data[0][1]}',
                         caption=(
                             '<b>–£ –≤–∞—Å –Ω–æ–≤–∞—è —Ä–µ–∞–∫—Ü–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>\n\n'
                             f'<b>–ò–º—è:</b> {self_data[0][0]}\n'
                             f'<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {self_data[0][4]}\n'
                             f'<b>–ü–æ–ª:</b> {self_gender}\n'
                             f'<b>–ì–æ—Ä–æ–¥:</b> {self_data[0][5]}\n'
                             f'<b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
                         ),
                         parse_mode='HTML',
                         reply_markup=kb.incoming_request_reaction(user_tg_id))


async def bot_send_message_matchs_likes(user_tg_id, current_user_id, bot, callback):

    self_data = await asyncio.to_thread(get_user_data, user_tg_id)
    current_user_data = await asyncio.to_thread(get_user_data, current_user_id)

    self_nickname = self_data[0][2]
    current_user_nickname = current_user_data[0][2]

    # –°–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–º—É, –ö–û–ú–£ –û–¢–í–ï–¢–ò–õ–ò –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é

    try:
        await bot.edit_message_media(
            chat_id=current_user_id,
            media=InputMediaPhoto(
                media=f'{self_data[0][1]}',
                caption=(
                    '–•–æ—Ä–æ—à–∏–µ –Ω–æ–≤–æ—Å—Ç–∏! üéâ\n'
                    f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self_data[0][0]} –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–∞—à—É '
                    '—Ä–µ–∞–∫—Ü–∏—é –∏ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª '
                    '<b>"–ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"</b>\n\n'
                    '‚úâÔ∏è <i>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ª–∏—á–Ω—É—é –±–µ—Å–µ–¥—É.</i>'
                ),
                parse_mode='HTML'
            ),
            reply_markup=kb.match_reactions(current_user_nickname)
        )

    except:

        try:
            await callback.message.delete()
        except:
            pass

        await bot.send_photo(chat_id=current_user_id,
                             photo=f'{self_data[0][1]}',
                             caption=(
                                 '–•–æ—Ä–æ—à–∏–µ –Ω–æ–≤–æ—Å—Ç–∏! üéâ\n'
                                 f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {
                                     self_data[0][0]} –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–∞—à—É '
                                 '—Ä–µ–∞–∫—Ü–∏—é –∏ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª '
                                 '<b>"–ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"</b>\n\n'
                                 '‚úâÔ∏è <i>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ª–∏—á–Ω—É—é –±–µ—Å–µ–¥—É.</i>'
                             ),
                             parse_mode='HTML',
                             reply_markup=kb.match_reactions(self_nickname))

    # —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–º—É, –∫—Ç–æ –ª–∞–π–∫–Ω—É–ª –≤ –æ—Ç–≤–µ—Ç (–º–Ω–µ)
    try:

        await bot.edit_message_media(
            chat_id=user_tg_id,
            media=InputMediaPhoto(
                media=f'{current_user_data[0][1]}',
                caption=(
                    f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {current_user_data[0][0]} '
                    '–¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª <b>"–ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"</b>\n\n'
                    '‚úâÔ∏è <i>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ª–∏—á–Ω—É—é –±–µ—Å–µ–¥—É.</i>'
                ),
                parse_mode='HTML'
            ),
            reply_markup=kb.match_reactions(current_user_nickname)
        )

    except:

        try:
            await callback.message.delete()
        except:
            pass

        await bot.send_photo(chat_id=user_tg_id,
                             photo=f'{current_user_data[0][1]}',
                             caption=(
                                 f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {current_user_data[0][0]} '
                                 '–¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª <b>"–ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"</b>\n\n'
                                 '‚úâÔ∏è <i>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ª–∏—á–Ω—É—é –±–µ—Å–µ–¥—É.</i>'
                             ),
                             parse_mode='HTML',
                             reply_markup=kb.match_reactions(current_user_nickname))
