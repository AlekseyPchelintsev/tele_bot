import asyncio
from datetime import datetime
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram import F, Router, Bot
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from src.modules.get_self_data import get_user_info
from src.modules.delete_messages import del_last_message
from src.database.requests.age_change import change_user_age
from src.modules.check_emoji import check_emoji
from src.modules.notifications import loader
import src.modules.keyboard as kb

router = Router()


class Registration(StatesGroup):
    change_age = State()


# –°–¢–†–ê–ù–ò–¶–ê –ò–ó–ú–ï–ù–ï–ù–ò–Ø –î–ê–¢–´ –†–û–ñ–î–ï–ù–ò–Ø

@router.callback_query(F.data == 'edit_age')
async def edit_age_menu(callback: CallbackQuery, state: FSMContext):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –æ—á–∏—â–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    await state.clear()

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    edit_message = await callback.message.edit_media(
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç:</b> {self_data[0][4]}'
                '\n\nüí¨ <i>–ü—Ä–∏—à–ª–∏—Ç–µ –≤ —á–∞—Ç –¥–∞—Ç—É –≤–∞—à–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ</i> <b>"–î–î.–ú–ú.–ì–ì–ì–ì":</b>'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back
    )

    # –¥–æ–±–∞–≤–ª—è—é id —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await state.update_data(message_id=edit_message.message_id)

    # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞—Ç–æ–π —Ä–æ–∂–¥–µ–Ω–∏—è
    await state.set_state(Registration.change_age)


# –û–ñ–ò–î–ê–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–Ø –° –î–ê–¢–û–ô –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø

@router.message(Registration.change_age)
async def edit_age(message: Message, state: FSMContext, bot: Bot):

    # –ø–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = message.from_user.id

    # –ø–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–î–î.–ú–ú.–ì–ì–ì–ì)
    age = message.text

    # –ø–æ–ª—É—á–∞—é id —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    message_data = await state.get_data()
    message_id = message_data.get('message_id')

    # —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∞—Ç–æ–π –∏–∑ —á–∞—Ç–∞
    await del_last_message(message)

    # –ø–µ—Ä–µ–¥–∞—é –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–æ–≤–æ–π –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è) –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    await change_age(user_tg_id, age, message, message_id, state, bot)


# –õ–û–ì–ò–ö–ê –ò–ó–ú–ï–ù–ï–ù–ò–Ø –í–û–ó–í–†–ê–°–¢–ê

async def change_age(user_tg_id, age, message, message_id, state, bot):

    # –ø—Ä–æ–≤–µ—Ä—è—é —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–º
    if message.content_type == 'text' and message.text:

        # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ç–µ–∫—Å—Ç
        age = message.text

        # –ø—Ä–æ–≤–µ—Ä—è—é –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏
        emodji_checked = await check_emoji(age)

        # –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–º–æ–¥–∑–∏
        if not emodji_checked:

            # –≤—ã–≤–æ–∂—É –æ—à–∏–±–∫—É
            await wrong_date_format(user_tg_id, message_id, bot)

            # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            return

        # –µ—Å–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–º–æ–¥–∑–∏ -
        # –ø—Ä–æ–≤–µ—Ä—è—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        # (–î–î.–ú–ú.–ì–ì–ì–ì) –∏ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞—Ç—ã
        try:
            check_birth_date = datetime.strptime(age, '%d.%m.%Y')
            user_birth_date = check_birth_date.strftime('%d.%m.%Y')
            today_date = datetime.today()
            user_age = today_date.year - check_birth_date.year - (
                (today_date.month, today_date.day) <
                (check_birth_date.month, check_birth_date.day)
            )

        # –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç (–î–î.–ú–ú.–ì–ì–ì–ì)
        except ValueError:

            # –µ—Å–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            await wrong_date_format(user_tg_id, message_id, bot)

            # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞—Ç–æ–π (–î–î.–ú–ú.–ì–ì–ì–ì)
            return

        # –µ—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ - –æ—Ç–ø—Ä–∞–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
        await date_changed(user_tg_id, message, user_age,
                           user_birth_date, message_id,
                           state, bot)

    # –µ—Å–ª–∏ –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–º (—Ñ–æ—Ç–æ, –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —Ç.–¥.)
    else:

        # –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        await wrong_date_format(user_tg_id, message_id, bot)

        # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞—Ç–æ–π (–î–î.–ú–ú.–ì–ì–ì–ì)
        return


# –û–®–ò–ë–ö–ê –§–û–†–ú–ê–¢–ê –î–ê–ù–ù–´–• –î–ê–¢–´ –†–û–ñ–î–ï–ù–ò–Ø

async def wrong_date_format(user_tg_id, message_id, bot):

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç:</b> {self_data[0][4]}'
                '\n\n‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö</b> ‚ö†Ô∏è'
            ),
            parse_mode='HTML'
        )
    )

    await asyncio.sleep(1.5)

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç:</b> {self_data[0][4]}'
                '\n\nüí¨ <i>–ü—Ä–∏—à–ª–∏—Ç–µ –≤ —á–∞—Ç –¥–∞—Ç—É –≤–∞—à–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ</i> <b>"–î–î.–ú–ú.–ì–ì–ì–ì":</b>'
                '\n(<code>–ü—Ä–∏–º–µ—Ä:</code> <b>01.01.2000</b>)'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back
    )


# –ò–ó–ú–ï–ù–ï–ù–ò–ï –î–ê–¢–´ –†–û–ñ–î–ï–ù–ò–Ø (–í–ù–ï–°–ï–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô –í –ë–î) –ò –û–¢–†–ò–°–û–í–ö–ê –°–¢–†–ê–ù–ò–¶–´

async def date_changed(user_tg_id, message, user_age, user_birth_date, message_id, state, bot):

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç:</b> {self_data[0][4]}'
            ),
            parse_mode='HTML'
        )
    )
    await loader(message, '–í–Ω–æ—à—É –∏–∑–º–µ–Ω–µ–Ω–∏—è')

    # –≤–Ω–µ—Å–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–¥
    await asyncio.to_thread(change_user_age, user_tg_id, user_age, user_birth_date)

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    self_data = user_info['data']
    self_gender = user_info['gender']
    self_hobbies = user_info['hobbies']
    about_me = user_info['about_me']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –≤–Ω–µ—Å–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç:</b> {self_data[0][4]}'
                '\n\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ ‚úÖ'
            ),
            parse_mode='HTML'
        )
    )

    await asyncio.sleep(1.5)

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'‚ñ∫ <b>–ò–º—è:</b> {self_data[0][0]}'
                f'\n‚ñ∫ <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {self_data[0][4]}'
                f'\n‚ñ∫ <b>–ü–æ–ª:</b> {self_gender}'
                f'\n‚ñ∫ <b>–ì–æ—Ä–æ–¥:</b> {self_data[0][5]}'
                f'\n‚ñ∫ <b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
                f'\n‚ñ∫ <b>–û —Å–µ–±–µ:</b> {about_me}'
                '\n\n<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:</b>'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.about_me
    )

    # —É–¥–∞–ª—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.clear()
