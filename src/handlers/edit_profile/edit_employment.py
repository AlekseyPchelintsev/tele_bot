import asyncio
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram import F, Router, Bot
from aiogram.fsm.state import State, StatesGroup
from src.modules.get_self_data import get_user_info
from aiogram.fsm.context import FSMContext
from src.database.requests.employment_change import change_user_employment
from src.modules.check_emoji import check_emoji, check_all_markdown, check_partial_markdown
from src.modules.moving_through_sections import check_menu_command
from config import exclude_text_message

import src.modules.keyboard as kb

router = Router()


class Registration(StatesGroup):
    edit_employment = State()


@router.callback_query(F.data == 'edit_employment')
async def change_employment(callback: CallbackQuery):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await callback.message.edit_media(
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                '\n<b>–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:</b>'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.edit_job_or_study
    )


@router.callback_query(F.data.in_(['work', 'study', 'search_myself']))
async def employment_changed(callback: CallbackQuery, state: FSMContext):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']

    if callback.data == 'work':

        employment = '–†–∞–±–æ—Ç–∞—é'

        # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        message_to_edit = await callback.message.edit_media(
            media=InputMediaPhoto(
                media=f'{self_data[0][1]}',
                caption=(
                    '\n‚úèÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ <b>–∫–µ–º –∏ –≤ –∫–∞–∫–æ–π —Å—Ñ–µ—Ä–µ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ</b>:'),
                parse_mode='HTML'
            ),
            reply_markup=kb.back
        )

        await state.update_data(employment=employment,
                                message_to_edit=message_to_edit.message_id)
        await state.set_state(Registration.edit_employment)

    elif callback.data == 'study':

        employment = '–£—á—É—Å—å'

        # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        message_to_edit = await callback.message.edit_media(
            media=InputMediaPhoto(
                media=f'{self_data[0][1]}',
                caption=(
                    '\n‚úèÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ <b>–≥–¥–µ –∏ –Ω–∞ –∫–æ–≥–æ –≤—ã —É—á–∏—Ç–µ—Å—å</b>:'),
                parse_mode='HTML'
            ),
            reply_markup=kb.back
        )

        await state.update_data(employment=employment,
                                message_to_edit=message_to_edit.message_id)
        await state.set_state(Registration.edit_employment)

    elif callback.data == 'search_myself':

        employment = '–í –ø–æ–∏—Å–∫–µ —Å–µ–±—è'
        employment_info = 'üëÄ'

        # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–¥
        await asyncio.to_thread(change_user_employment,
                                user_tg_id,
                                employment,
                                employment_info)

        # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
        user_info = await get_user_info(user_tg_id)

        # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
        self_data = user_info['data']
        self_photo = self_data[0][1]
        self_name = self_data[0][0]
        self_age = self_data[0][4]
        self_city = self_data[0][5]
        self_gender = user_info['gender']
        self_hobbies = user_info['hobbies']
        about_me = user_info['about_me']
        # —É—á–µ–±–∞/—Ä–∞–±–æ—Ç–∞
        employment = user_info['employment']
        employment_info = user_info['employment_info']

        # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –≤–Ω–µ—Å–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
        await callback.message.edit_media(
            media=InputMediaPhoto(
                media=f'{self_photo}',
                caption=(
                    f'{self_gender}'  # –ø–æ–ª
                    f' ‚Ä¢ {self_name}'  # –∏–º—è
                    f' ‚Ä¢ {self_age}'  # –≤–æ–∑—Ä–∞—Å—Ç
                    f' ‚Ä¢ {self_city}'  # –≥–æ—Ä–æ–¥
                    f'\n‚ñ∫ <b>{employment}:</b> {employment_info}'
                    f'\n‚ñ∫ <b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
                    f'\n‚ñ∫ <b>–û —Å–µ–±–µ:</b> {about_me}'
                    '\n\n–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã ‚úÖ'
                    '\n\n<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:</b>'
                ),
                parse_mode='HTML'
            ),
            reply_markup=kb.about_me
        )

        # –î–û–ü–ò–°–ê–¢–¨


@router.message(Registration.edit_employment)
async def changed_employment(message: Message, state: FSMContext, bot: Bot):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = message.from_user.id

    # –ø–ª—É—á–∞—é id —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    data_state = await state.get_data()
    message_id = data_state.get('message_to_edit')
    employment = data_state.get('employment')

    # –∑–∞–≤–æ–∂—É –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ç–µ–∫—Å—Ç –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–º–∞–π–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if message.content_type == 'text':

        # —Å–æ—Ö—Ä–∞–Ω—è—é —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–∏–≤–æ–∂—É –µ–≥–æ –∫ –∑–∞–≥–ª–∞–≤–Ω–æ–º—É
        employment_info = message.text

        # –ø–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        if employment_info not in exclude_text_message:

            # —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await message.delete()

            # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ–ª—å—à–µ 100 —Å–∏–º–≤–æ–ª–æ–≤ - –æ–±—Ä–µ–∑–∞—é –µ–≥–æ –∏ –¥–æ–±–∞–≤–ª—è—é ... –≤ –∫–æ–Ω—Ü–µ
            if len(message.text) > 100:
                employment_info = employment_info[:100] + '...'

            # –ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ —ç–º–æ–¥–∑–∏ –∏ markdown —Ä–∞–∑–º–µ—Ç–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            emodji_checked = await check_emoji(employment_info)
            markdown_checked = await check_partial_markdown(employment_info)

            # –µ—Å–ª–∏ —ç–º–æ–¥–∑–∏ –µ—Å—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            if emodji_checked or markdown_checked:

                # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
                user_info = await get_user_info(user_tg_id)

                # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
                self_data = user_info['data']
                self_photo = self_data[0][1]

                # –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                try:
                    await bot.edit_message_media(
                        chat_id=user_tg_id,
                        message_id=message_id,
                        media=InputMediaPhoto(
                            media=self_photo,
                            caption=(
                                '‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö</b> ‚ö†Ô∏è'
                                '\n\n‚ùóÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å '
                                '<b>—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç</b>, –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —ç–º–æ–¥–∑–∏, '
                                '–∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å –¥–ª–∏–Ω–Ω—É –≤ <b>100 —Å–∏–º–≤–æ–ª–æ–≤</b>.'
                                '\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ —á–∞—Ç –µ—â–µ —Ä–∞–∑:'
                            ),
                            parse_mode='HTML'
                        ),
                        reply_markup=kb.back
                    )
                except Exception as e:
                    pass

                # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–º–µ–Ω–µ–º
                return

            # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–¥
            await asyncio.to_thread(change_user_employment,
                                    user_tg_id,
                                    employment,
                                    employment_info)

            # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
            user_info = await get_user_info(user_tg_id)

            # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
            self_data = user_info['data']
            self_photo = self_data[0][1]
            self_name = self_data[0][0]
            self_age = self_data[0][4]
            self_city = self_data[0][5]
            self_gender = user_info['gender']
            self_hobbies = user_info['hobbies']
            about_me = user_info['about_me']
            # —É—á–µ–±–∞/—Ä–∞–±–æ—Ç–∞
            employment = user_info['employment']
            employment_info = user_info['employment_info']

            # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –≤–Ω–µ—Å–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
            await bot.edit_message_media(
                chat_id=user_tg_id,
                message_id=message_id,
                media=InputMediaPhoto(
                    media=f'{self_photo}',
                    caption=(
                        f'{self_gender}'  # –ø–æ–ª
                        f' ‚Ä¢ {self_name}'  # –∏–º—è
                        f' ‚Ä¢ {self_age}'  # –≤–æ–∑—Ä–∞—Å—Ç
                        f' ‚Ä¢ {self_city}'  # –≥–æ—Ä–æ–¥
                        f'\n‚ñ∫ <b>{employment}:</b> {employment_info}'
                        f'\n‚ñ∫ <b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
                        f'\n‚ñ∫ <b>–û —Å–µ–±–µ:</b> {about_me}'
                        '\n\n–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã ‚úÖ'
                        '\n\n<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:</b>'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.about_me
            )

            await state.clear()

        # –µ—Å–ª–∏–∏ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–∞–Ω–¥—É –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        else:

            # –æ—á–∏—â–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –æ—Ä–∞–±–∞—Ç—ã–≤–∞—é –µ–µ –∏ –æ—Ç–∫—Ä—ã–≤–∞—é
            # —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é
            await check_menu_command(message, employment_info, state)

    else:

        # —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.delete()

        # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
        user_info = await get_user_info(user_tg_id)

        # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
        self_data = user_info['data']
        self_photo = self_data[0][1]

        # –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        try:
            await bot.edit_message_media(
                chat_id=user_tg_id,
                message_id=message_id,
                media=InputMediaPhoto(
                    media=self_photo,
                    caption=(
                        '‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö</b> ‚ö†Ô∏è'
                        '\n\n‚ùóÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ '
                        '–ª—é–±–æ–π –æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç —Ç–µ–∫—Å—Ç–∞ –∫–æ–Ω—Ç–µ–Ω—Ç, '
                        '–∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å –¥–ª–∏–Ω–Ω—É –≤ <b>100 —Å–∏–º–≤–æ–ª–æ–≤</b>.'
                        '\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ —á–∞—Ç –µ—â–µ —Ä–∞–∑:'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.back
            )

        except Exception as e:
            pass

        # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–º–µ–Ω–µ–º
        return
