import asyncio
import re
from aiogram import Bot
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram import F, Router
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from src.modules.get_self_data import get_user_info
from src.modules.delete_messages import del_last_message
from src.database.requests.about_me_data import edit_about_me_data, delete_about_me_data
from src.modules.check_emoji import check_partial_markdown
from src.modules.moving_through_sections import check_menu_command
from config import exclude_text_message
import src.modules.keyboard as kb

router = Router()


class Registration(StatesGroup):
    change_about_me = State()


# –ú–ï–ù–Æ –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –û –°–ï–ë–ï
@router.callback_query(F.data == 'edit_about_me')
async def edit_about_me_menu(callback: CallbackQuery, state: FSMContext):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –æ—á–∏—â–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    await state.clear()

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']
    about_me = user_info['about_me']

    # –ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ aboutme
    if about_me == '-':

        # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await callback.message.edit_media(
            media=InputMediaPhoto(
                media=f'{self_data[0][1]}',
                caption=(
                    '<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞</b>'
                    f'\n<b>–û —Å–µ–±–µ:</b> {about_me}'
                ),
                parse_mode='HTML'
            ),
            reply_markup=kb.edit_about_me_no_delete_button
        )

    else:

        # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await callback.message.edit_media(
            media=InputMediaPhoto(
                media=f'{self_data[0][1]}',
                caption=(
                    '<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞</b>'
                    f'\n<b>–û —Å–µ–±–µ:</b> {about_me}'
                ),
                parse_mode='HTML'
            ),
            reply_markup=kb.edit_about_me
        )


# –î–û–ë–ê–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–• –û –°–ï–ë–ï
@router.callback_query(F.data == 'add_about_me')
async def edit_about_me(callback: CallbackQuery, state: FSMContext):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –æ—á–∏—â–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    await state.clear()

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']
    about_me = user_info['about_me']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    edit_message = await callback.message.edit_media(
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                '<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞</b>'
                f'\n<b>–û —Å–µ–±–µ:</b> {about_me}'
                '\n\nüí¨ <b>–ü—Ä–∏—à–ª–∏—Ç–µ –≤ —á–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–û —Å–µ–±–µ".</b>'
                '\n\nüìç <u>–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –ª–µ–∫—Å–∏–∫—É.</u>'
                '\nüìç <b>–û—Ç–Ω–æ—Å–∏—Ç–µ—Å—å —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ –∫ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</b>!'
                '\n‚ö†Ô∏è (–î–ª–∏–Ω–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 200 —Å–∏–º–≤–æ–ª–æ–≤):'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back
    )

    # –¥–æ–±–∞–≤–ª—è—é –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ id —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await state.update_data(message_id=edit_message.message_id)

    # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º
    await state.set_state(Registration.change_about_me)


@router.message(Registration.change_about_me)
async def edit_about_me_state(message: Message, state: FSMContext, bot: Bot):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = message.from_user.id

    # –ø–æ–ª—É—á–∞—é –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è id —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    message_data = await state.get_data()
    message_id = message_data.get('message_id')

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    self_data = user_info['data']
    about_me = user_info['about_me']

    # –ø—Ä–æ–≤–µ—Ä—è—é —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ
    if message.content_type == 'text':

        # —Å–æ—Ö—Ä–∞–Ω—è—é —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        about_me_text = message.text

        if about_me_text not in exclude_text_message:

            # —É–¥–∞–ª—è—é –∏–∑ —á–∞—Ç–∞ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º
            await del_last_message(message)

            # –ø—Ä–æ–≤–µ—Ä—è—é –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ markdown —Ä–∞–∑–º–µ—Ç–∫—É
            markdown_checked = await check_partial_markdown(about_me_text)

            # –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–º–æ–¥–∑–∏
            if markdown_checked:

                # –≤—ã–≤–æ–∂—É –æ—à–∏–±–∫—É
                try:
                    await bot.edit_message_media(
                        chat_id=user_tg_id,
                        message_id=message_id,
                        media=InputMediaPhoto(
                            media=f'{self_data[0][1]}',
                            caption=(
                                '<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞</b>'
                                f'\n<b>–û —Å–µ–±–µ:</b> {about_me}'
                                '\n\n‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö</b> ‚ö†Ô∏è'
                                '\n\n‚ùóÔ∏è –°–≤–µ–¥–µ–Ω–∏—è "–û —Å–µ–±–µ" –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å '
                                '<b>—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç</b> (–±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤) <b>–∏ —ç–º–æ–¥–∑–∏</b> üòâ.'
                                '\n\nüí¨ <b>–ü—Ä–∏—à–ª–∏—Ç–µ –≤ —á–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–û —Å–µ–±–µ".</b>'
                            ),
                            parse_mode='HTML'
                        ),
                        reply_markup=kb.back
                    )
                except Exception as e:
                    pass

                # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                return

            # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ–ª—å—à–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ - –æ–±—Ä–µ–∑–∞—é –µ–≥–æ –∏ –¥–æ–±–∞–≤–ª—è—é ... –≤ –∫–æ–Ω—Ü–µ
            if len(message.text) > 200:
                about_me_text = about_me_text[:200] + '...'

            # –¥–æ–±–∞–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –≤ –±–¥
            await asyncio.to_thread(edit_about_me_data, user_tg_id, about_me_text)

            # –ø–æ–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
            user_info = await get_user_info(user_tg_id)

            # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
            self_data = user_info['data']
            self_photo = self_data[0][1]
            self_name = self_data[0][0]
            self_age = self_data[0][4]
            self_city = self_data[0][5]
            self_gender = user_info['gender']
            self_hobbies = user_info['hobbies']
            about_me = user_info['about_me']
            # —É—á–µ–±–∞/—Ä–∞–±–æ—Ç–∞
            employment = user_info['employment']
            employment_info = user_info['employment_info']

            # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            await bot.edit_message_media(
                chat_id=user_tg_id,
                message_id=message_id,
                media=InputMediaPhoto(
                    media=f'{self_photo}',
                    caption=(
                        f'{self_gender}'  # –ø–æ–ª
                        f' ‚Ä¢ {self_name}'  # –∏–º—è
                        f' ‚Ä¢ {self_age}'  # –≤–æ–∑—Ä–∞—Å—Ç
                        f' ‚Ä¢ {self_city}'  # –≥–æ—Ä–æ–¥
                        f'\n‚ñ∫ <b>{employment}:</b> {employment_info}'
                        f'\n‚ñ∫ <b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
                        f'\n‚ñ∫ <b>–û —Å–µ–±–µ:</b> {about_me}'
                        '\n\n‚úÖ <i>–†–∞–∑–¥–µ–ª "–û —Å–µ–±–µ" –∏–∑–º–µ–Ω–µ–Ω</i>'
                        '\n\n<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:</b>'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.about_me
            )

            # –æ—á–∏—â–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            await state.clear()

        # –µ—Å–ª–∏–∏ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–∞–Ω–¥—É –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        else:

            # –æ—á–∏—â–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –æ—Ä–∞–±–∞—Ç—ã–≤–∞—é –µ–µ –∏ –æ—Ç–∫—Ä—ã–≤–∞—é
            # —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é
            await check_menu_command(message, about_me_text, state)

    # –µ—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ –Ω–µ —Ç–µ–∫—Å—Ç
    else:

        # —É–¥–∞–ª—è—é –∏–∑ —á–∞—Ç–∞ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º
        await del_last_message(message)

        # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            await bot.edit_message_media(
                chat_id=user_tg_id,
                message_id=message_id,
                media=InputMediaPhoto(
                    media=f'{self_data[0][1]}',
                    caption=(
                        '<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞</b>'
                        f'\n<b>–û —Å–µ–±–µ:</b> {about_me}'
                        '\n\n‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö</b> ‚ö†Ô∏è'
                        '\n\n‚ùóÔ∏è –°–≤–µ–¥–µ–Ω–∏—è "–û —Å–µ–±–µ" –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å '
                        '<b>—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∏ —ç–º–æ–¥–∑–∏ üòâ</b>.'
                        '\n\nüí¨ <b>–ü—Ä–∏—à–ª–∏—Ç–µ –≤ —á–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–û —Å–µ–±–µ".</b>'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.back
            )
        except Exception as e:
            pass

        # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        return


@router.callback_query(F.data == 'delete_about_me')
async def delete_about_me(callback: CallbackQuery):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # —É–¥–∞–ª—é –∑–∞–ø–∏—Å—å –∏–∑ –±–¥
    await asyncio.to_thread(delete_about_me_data, user_tg_id)

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    self_data = user_info['data']
    self_photo = self_data[0][1]
    self_name = self_data[0][0]
    self_age = self_data[0][4]
    self_city = self_data[0][5]
    self_gender = user_info['gender']
    self_hobbies = user_info['hobbies']
    about_me = user_info['about_me']
    # —É—á–µ–±–∞/—Ä–∞–±–æ—Ç–∞
    employment = user_info['employment']
    employment_info = user_info['employment_info']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await callback.message.edit_media(
        media=InputMediaPhoto(
            media=f'{self_photo}',
            caption=(
                f'{self_gender}'  # –ø–æ–ª
                f' ‚Ä¢ {self_name}'  # –∏–º—è
                f' ‚Ä¢ {self_age}'  # –≤–æ–∑—Ä–∞—Å—Ç
                f' ‚Ä¢ {self_city}'  # –≥–æ—Ä–æ–¥
                f'\n‚ñ∫ <b>{employment}:</b> {employment_info}'
                f'\n‚ñ∫ <b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
                f'\n‚ñ∫ <b>–û —Å–µ–±–µ:</b> {about_me}'
                '\n\n‚úÖ <i>–î–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ "–û —Å–µ–±–µ" —É–¥–∞–ª–µ–Ω—ã</i>'
                '\n\n<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:</b>'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.about_me
    )
