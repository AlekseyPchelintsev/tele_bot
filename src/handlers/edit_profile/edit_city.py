import asyncio
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram import F, Router, Bot
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from src.modules.get_self_data import get_user_info
from src.modules.delete_messages import del_last_message
from src.database.requests.city_data import change_city
from src.modules.check_emoji_and_markdown import check_emoji, check_markdown_city_name
from src.modules.moving_through_sections import check_menu_command
import src.modules.keyboard as kb
from config import exclude_text_message

router = Router()


class Registration(StatesGroup):
    change_city = State()


delete_messages = []
delete_last_message = []


# –ú–ï–ù–Æ –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –ì–û–†–û–î–ê
@router.callback_query(F.data == 'edit_city')
async def edit_city(callback: CallbackQuery, state: FSMContext):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    edit_message = await callback.message.edit_media(
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –≥–æ—Ä–æ–¥:</b> {self_data[0][5]}'
                '\n\nüí¨ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –≤ —á–∞—Ç.</b>'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back
    )

    # –¥–æ–±–∞–≤–ª—è—é –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ id j—Å–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await state.update_data(message_id=edit_message.message_id)

    # –∑–∞–ø—É—Å–∫–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    await state.set_state(Registration.change_city)


# –°–û–°–¢–û–Ø–ù–ò–ï –û–ñ–ò–î–ê–ù–ò–Ø –°–û–û–ë–©–ï–ù–ò–Ø –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –° –ù–ê–ó–í–ê–ù–ò–ï–ú –ì–û–†–û–î–ê
@router.message(Registration.change_city)
async def new_city(message: Message, state: FSMContext, bot: Bot):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = message.from_user.id

    # –ø–æ–ª—É—á–∞—é id —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    message_data = await state.get_data()
    message_id = message_data.get('message_id')

    # –ø—Ä–æ–≤–µ—Ä—è—é —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–º
    if message.content_type == 'text' and len(message.text) <= 25:

        # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ç–µ–∫—Å—Ç
        new_city_name = message.text

        # –ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        if new_city_name not in exclude_text_message:

            # —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞ (—Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞)
            await del_last_message(message)

            # –ø—Ä–∏–≤–æ–∂—É –∫ –∑–∞–≥–ª–∞–≤–Ω–æ–µ–º—É –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
            new_city_name = message.text.title()

            # –ø—Ä–æ–≤–µ—Ä—è—é –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏
            emodji_checked = await check_emoji(new_city_name)
            markdown_checked = await check_markdown_city_name(new_city_name)

            # –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–º–æ–¥–∑–∏
            if emodji_checked or markdown_checked:

                # –≤—ã–≤–æ–∂—É –æ—à–∏–±–∫—É
                await wrong_city_name(user_tg_id, message_id, bot)

                # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                return

            # –µ—Å–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–º–æ–¥–∑–∏ -
            # –ø–µ—Ä–µ–¥–∞—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–¥ –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            await change_city_name(user_tg_id, message, message_id, new_city_name, bot, state)

        # –µ—Å–ª–∏ –±—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –≤–º–µ—Å—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞
        else:

            # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—É –æ—á–∏—â–∞—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–∂—É –≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é
            await check_menu_command(user_tg_id, message, new_city_name, state)

    # –µ—Å–ª–∏ –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–º (—Ñ–æ—Ç–æ, –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —Ç.–¥.)
    else:

        # —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞ (—Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞)
        await del_last_message(message)

        # –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        await wrong_city_name(user_tg_id, message_id, bot)

        # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥–æ—Ä–æ–¥–∞
        return


# –ù–ï–í–ï–†–ù–´–ô –§–û–†–ú–ê–¢ –î–ê–ù–ù–´–• –í –ù–ê–ó–í–ê–ù–ò–ò –ì–û–†–û–î–ê
async def wrong_city_name(user_tg_id, message_id, bot):

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –∏–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        await bot.edit_message_media(
            chat_id=user_tg_id,
            message_id=message_id,
            media=InputMediaPhoto(
                media=f'{self_data[0][1]}',
                caption=(
                    f'\n<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –≥–æ—Ä–æ–¥:</b> {self_data[0][5]}'
                    '\n\n‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö</b> ‚ö†Ô∏è'
                    '\n\n‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å <b>—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç</b>, '
                    '–Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —ç–º–æ–¥–∑–∏ '
                    '–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∞ —Ç–∞–∫ –∂–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å –¥–ª–∏–Ω–Ω—É –≤ '
                    '<b>25 —Å–∏–º–≤–æ–ª–æ–≤</b>.'
                ),
                parse_mode='HTML'
            ),
            reply_markup=kb.back
        )
    except Exception as e:
        pass


# –ò–ó–ú–ï–ù–ï–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–Ø –ì–û–†–û–î–ê(–í–ù–ï–°–ï–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô –í –ë–î) –ò –û–¢–†–ò–°–û–í–ö–ê –°–¢–†–ê–ù–ò–¶–´
async def change_city_name(user_tg_id, message, message_id, new_city_name, bot, state):

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']

    # –≤–Ω–µ—Å–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–¥
    await asyncio.to_thread(change_city, new_city_name, user_tg_id)

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –≤–Ω–µ—Å–µ–Ω–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    self_data = user_info['data']
    self_photo = self_data[0][1]
    self_name = self_data[0][0]
    self_age = self_data[0][4]
    self_city = self_data[0][5]
    self_gender = user_info['gender']
    self_hobbies = user_info['hobbies']
    about_me = user_info['about_me']
    # —É—á–µ–±–∞/—Ä–∞–±–æ—Ç–∞
    employment = user_info['employment']
    employment_info = user_info['employment_info']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_photo}',
            caption=(
                f'{self_gender}'  # –ø–æ–ª
                f' ‚Ä¢ {self_name}'  # –∏–º—è
                f' ‚Ä¢ {self_age}'  # –≤–æ–∑—Ä–∞—Å—Ç
                f' ‚Ä¢ {self_city}'  # –≥–æ—Ä–æ–¥
                f'\n‚ñ∫ <b>{employment}:</b> {employment_info}'
                f'\n‚ñ∫ <b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
                f'\n‚ñ∫ <b>–û —Å–µ–±–µ:</b> {about_me}'
                '\n\n‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ'
                '\n\n<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:</b>'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.about_me
    )

    await state.clear()
