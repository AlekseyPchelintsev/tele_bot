import asyncio
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram import F, Router, Bot
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from src.modules.notifications import attention_message
from src.modules.delete_messages import del_last_message
from src.modules.get_self_data import get_user_info
from src.database.requests.hobbies_data import check_hobby, delete_hobby
from src.handlers.edit_name import check_emodji
import src.modules.keyboard as kb

router = Router()


class Registration(StatesGroup):
    hobby = State()
    hobby_del = State()


delete_messages = []
delete_last_message = []


# –ú–ï–ù–Æ –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –£–í–õ–ï–ß–ï–ù–ò–ô

@router.callback_query(F.data == 'edit_hobbies')
async def edit_hobbies(callback: CallbackQuery, state: FSMContext):

    # –æ—á–∏—â–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    await state.clear()

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–≤–ª–µ—á–µ–Ω–∏–π
    await check_hobbies_list(user_tg_id, callback)


# –ü–†–û–í–ï–†–ö–ê –ù–ê–õ–ò–ß–ò–Ø –£–í–õ–ï–ß–ï–ù–ò–ô (–í –ü–†–ò–ù–¶–ò–ü–ï) –ò –û–¢–†–ò–°–û–í–ö–ê –ú–ï–ù–Æ
# –° –ö–ù–û–ü–ö–û–ô –£–î–ê–õ–ï–ù–ò–Ø (–ï–°–õ–ò –ï–°–¢–¨) –ò–õ–ò –ë–ï–ó (–ï–°–õ–ò –£–í–õ–ï–ß–ï–ù–ò–ô –ù–ï–¢)
# –ê –¢–ê–ö–ñ–ï –ü–†–û–í–ï–†–ö–ê –ü–û –ö–û–õ–ò–ß–ï–°–¢–í–£ –£–í–õ–ï–ß–ï–ù–ò–ô –î–õ–Ø –í–ï–†–ù–û–ô –û–¢–†–ò–°–û–í–ö–ò –ö–õ–ê–í–ò–ê–¢–£–†–´

async def check_hobbies_list(user_tg_id, callback):

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –∏–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']
    hobbies_data = self_data[1]
    self_hobbies = user_info['hobbies']

    # –µ—Å–ª–∏ —Ö–æ–±–±–∏ –Ω–µ—Ç (–≤ —Ç–∞–±–ª–∏—Ü–µ –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω "-") –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –±–µ–∑ —É–∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
    if self_hobbies == '-':
        try:

            # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=f'{self_data[0][1]}',
                    caption='\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π –ø—É—Å—Ç ü§∑‚Äç‚ôÇÔ∏è</b>',
                    parse_mode='HTML'
                ),
                reply_markup=kb.no_hobbies
            )
        except:

            try:
                await del_last_message(callback.message)
            except:
                pass

            await callback.message.answer_photo(
                photo=f'{self_data[0][1]}',
                caption='\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π –ø—É—Å—Ç ü§∑‚Äç‚ôÇÔ∏è</b>',
                parse_mode='HTML',
                reply_markup=kb.no_hobbies
            )

    # –µ—Å–ª–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ 5 —É–≤–ª–µ—á–µ–Ω–∏–π (–æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –±–µ–∑ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–∏—Ç—å)
    elif len(hobbies_data) >= 7:

        try:
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=f'{self_data[0][1]}',
                    caption=(
                        f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                        '\n\n‚ö†Ô∏è <b>–í—ã –¥–æ–±–∞–≤–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–ª–µ—á–µ–Ω–∏–π.</b>'
                        '\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ - —É–¥–∞–ª–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –∏–º–µ—é—â–∏—Ö—Å—è.'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.max_hobbies
            )

        except:

            try:
                await del_last_message(callback.message)
            except:
                pass

            await callback.message.answer_photo(
                photo=f'{self_data[0][1]}',
                caption=(
                    f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                    '\n\n‚ö†Ô∏è <b>–í—ã –¥–æ–±–∞–≤–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–ª–µ—á–µ–Ω–∏–π.</b>'
                    '\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ - —É–¥–∞–ª–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –∏–º–µ—é—â–∏—Ö—Å—è.'
                ),
                parse_mode='HTML',
                reply_markup=kb.max_hobbies
            )

    # –µ—Å–ª–∏ —Ö–æ–±–±–∏ –µ—Å—Ç—å –∏ –Ω–µ –±–æ–ª–µ–µ 7 —à—Ç—É–∫
    else:
        try:

            # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=f'{self_data[0][1]}',
                    caption=(
                        f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π: </b>{self_hobbies}'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.edit_hobbies
            )
        except:

            try:
                await del_last_message(callback.message)
            except:
                pass

            await callback.message.answer_photo(
                photo=f'{self_data[0][1]}',
                caption=(
                    f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π: </b>{self_hobbies}'
                ),
                parse_mode='HTML',
                reply_markup=kb.edit_hobbies
            )


# –ú–ï–ù–Æ "–î–û–ë–ê–í–õ–ï–ù–ò–Ø –ù–û–í–û–ì–û –£–í–õ–ï–ß–ï–ù–ò–Ø"

@router.callback_query(F.data == 'new_hobby')
async def new_hobby(callback: CallbackQuery, state: FSMContext):

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–≤–ª–µ—á–µ–Ω–∏—è
    await new_hobby_menu(callback, state)

    # –¥–æ–±–∞–≤–ª—è—é –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ id —Å–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await state.update_data(message_id=callback.message.message_id)


# –û–¢–†–ò–°–û–í–ö–ê –ú–ï–ù–Æ –î–û–ë–ê–í–õ–ï–ù–ò–Ø –£–í–õ–ï–ß–ï–ù–ò–ô

async def new_hobby_menu(callback, state):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –∏–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']
    self_hobbies = user_info['hobbies']

    try:

        # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await callback.message.edit_media(
            media=InputMediaPhoto(
                media=f'{self_data[0][1]}',
                caption=(
                    f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                    '\n\n‚ÄºÔ∏è –î–æ–±–∞–≤—å—Ç–µ <b>–Ω–µ –±–æ–ª–µ–µ 7 —É–≤–ª–µ—á–µ–Ω–∏–π</b>.'
                    '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                    '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                    '\n(<u>–Ω–µ –±–æ–ª–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤</u>)'
                    '\n\nüí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —á–∞—Ç, '
                    '—á—Ç–æ–±—ã —è –º–æ–≥ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å:'
                ),
                parse_mode='HTML'
            ),
            reply_markup=kb.back_hobbies
        )

    except:

        try:
            await del_last_message(callback.message)
        except:
            pass

        await callback.message.answer_photo(
            photo=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                '\n\n‚ÄºÔ∏è –î–æ–±–∞–≤—å—Ç–µ <b>–Ω–µ –±–æ–ª–µ–µ 5 —É–≤–ª–µ—á–µ–Ω–∏–π</b>.'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\nüí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —á–∞—Ç, '
                '—á—Ç–æ–±—ã —è –º–æ–≥ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å:'
            ),
            parse_mode='HTML',
            reply_markup=kb.back_hobbies
        )

    # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —É–≤–ª–µ—á–µ–Ω–∏—è
    await state.set_state(Registration.hobby)


# –°–û–°–¢–û–Ø–ù–ò–ï –û–ñ–ò–î–ê–ù–ò–Ø –°–û–û–ë–©–ï–ù–ò–Ø –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –° –ù–ê–ó–í–ê–ù–ò–ï–ú –ù–û–í–û–ì–û –£–í–õ–ï–ß–ï–ù–ò–Ø

@router.message(Registration.hobby)
async def add_hobby(message: Message, state: FSMContext, bot: Bot):

    # —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞ —Å –Ω–æ–≤—ã–º —É–≤–ª–µ—á–µ–Ω–∏–µ–º
    await del_last_message(message)

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = message.from_user.id

    # –ø–æ–ª—É—á–∞—é id —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    message_data = await state.get_data()
    message_id = message_data.get('message_id')

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —á—Ç–æ –æ–Ω–æ —è–≤–ª—è–µ—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–º
    if message.content_type == 'text' and len(message.text) <= 50:

        #  —Å–æ—Ö—Ä–∞–Ω—è—é —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–∏–≤–æ–∂—É –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        hobby = message.text.lower()

        # –ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —ç–º–æ–¥–∑–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        emodji_checked = await check_emodji(hobby)

        # –µ—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å —ç–º–æ–¥–∑–∏
        if not emodji_checked:

            # –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await wrong_hobby_name(user_tg_id, message_id, bot)

            # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–æ–≤—ã–º —É–≤–ª–µ—á–µ–Ω–∏–µ–º
            return

        # –ø—Ä–æ–≤–µ—Ä—è—é –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —Ç–∞–∫–æ–µ —É–≤–ª–µ—á–µ–Ω–∏–µ
        checked = await asyncio.to_thread(check_hobby, user_tg_id, hobby)

        # –µ—Å–ª–∏ —Ç–∞–∫–æ–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —É–∂–µ –µ—Å—Ç—å
        if not checked:

            # –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await hobby_already_exist(user_tg_id, message_id, bot)

            # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–æ–≤—ã–º —É–≤–ª–µ—á–µ–Ω–∏–µ–º
            return

        # –µ—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ
        else:

            # –¥–æ–±–∞–≤–ª—è—é –Ω–æ–≤–æ–µ —Ö–æ–±–±–∏ –≤ –±–¥
            await hobby_succesful_added(user_tg_id, message_id, bot)

    # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ (—Ñ–æ—Ç–æ, –∞–Ω–∏–º–∞—Ü–∏—è –∏ —Ç.–¥.)
    else:

        # –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        await wrong_hobby_name(user_tg_id, message_id, bot)

        # –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–æ–≤—ã–º —É–≤–ª–µ—á–µ–Ω–∏–µ–º
        return


# –ú–ï–ù–Æ –£–î–ê–õ–ï–ù–ò–Ø –£–í–õ–ï–ß–ï–ù–ò–ô

@router.callback_query(F.data == 'del_hobby')
async def del_hobby(callback: CallbackQuery):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —É–¥–∞–ª–µ–Ω–∏—è —É–≤–ª–µ—á–µ–Ω–∏–π –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await check_hobby_to_delete(user_tg_id, callback)


# –û–¢–†–ò–°–û–í–ö–ê –°–¢–†–ê–ù–ò–¶–´ –° –ò–ù–õ–ê–ô–ù –ö–ù–û–ü–ö–ê–ú–ò –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø –ö–ê–ñ–î–û–ì–û –£–í–õ–ï–ß–ï–ù–ò–Ø

async def check_hobby_to_delete(user_tg_id, callback):

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –∏–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']
    hobbies_data = self_data[1]
    self_hobbies = user_info['hobbies']

    try:
        await callback.message.edit_media(
            media=InputMediaPhoto(
                media=f'{self_data[0][1]}',
                caption=(
                    f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                ),
                parse_mode='HTML'
            ),
            reply_markup=kb.delete_hobbies_keyboard(user_tg_id, hobbies_data))

    except:

        try:
            await del_last_message(callback.message)
        except:
            pass

        await callback.message.answer_photo(
            photo=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
            ),
            parse_mode='HTML',
            reply_markup=kb.delete_hobbies_keyboard(user_tg_id, hobbies_data))


# –£–î–ê–õ–ï–ù–ò–ï –£–í–õ–ï–ß–ï–ù–ò–Ø

@router.callback_query(F.data.startswith('remove_hobby:'))
async def handle_remove_hobby(callback: CallbackQuery):
    user_tg_id = callback.from_user.id

    # –ø–æ–ª—É—á–µ–Ω–Ω—ã–π id –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –≤ int
    hobby_id = int(callback.data.split(':')[1])

    # —É–¥–∞–ª—è—é —Ö–æ–±–±–∏ –∏–∑ –±–¥
    await asyncio.to_thread(delete_hobby, user_tg_id, hobby_id)

    # –ø—Ä–æ–≤–µ—Ä—è—é —Å–ø–∏—Å–æ–∫ —Ö–æ–±–±–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤–µ—Ä–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    # –∏ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É–¥–∞–ª–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    await check_hobby_to_delete(user_tg_id, callback)

    # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
    await attention_message(callback.message, '–£–≤–ª–µ—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ ‚úÖ', 1)


# –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –û–ë –û–®–ò–ë–ö–ï –ï–°–õ–ò –ù–ï–í–ï–†–ù–´–ô –§–û–†–ú–ê–¢ –î–ê–ù–ù–´–•

async def wrong_hobby_name(user_tg_id, message_id, bot):

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –∏–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']
    self_hobbies = user_info['hobbies']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\n‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö</b> ‚ö†Ô∏è'
            ),
            parse_mode='HTML'
        )
    )

    await asyncio.sleep(1.5)

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\n‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —É–≤–ª–µ—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å <b>—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç</b>'
                ', –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —ç–º–æ–¥–∑–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∞ —Ç–∞–∫ –∂–µ '
                '–Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å –¥–ª–∏–Ω–Ω—É –≤ <b>50 —Å–∏–º–≤–æ–ª–æ–≤</b>.'
                '\n\nüí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —á–∞—Ç, '
                '—á—Ç–æ–±—ã —è –º–æ–≥ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å.'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back
    )


# –ï–°–õ–ò –î–û–ë–ê–í–õ–Ø–ï–ú–û–ï –£–í–õ–ï–ß–ï–ù–ò–ï –£–ñ–ï –ï–°–¢–¨ –í –°–ü–ò–°–ö–ï –£–í–õ–ï–ß–ï–ù–ò–ô –£ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø

async def hobby_already_exist(user_tg_id, message_id, bot):

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –∏–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']
    self_hobbies = user_info['hobbies']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\n‚ùå –¢–∞–∫–æ–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ'
            ),
            parse_mode='HTML'
        )
    )

    await asyncio.sleep(2)

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\nüí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —á–∞—Ç, '
                '—á—Ç–æ–±—ã —è –º–æ–≥ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å.'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back
    )


# –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ò –û–¢–†–ò–°–û–í–ö–ê –°–¢–†–ê–ù–ò–¶–´ –ü–û–°–õ–ï –î–û–ë–ê–í–õ–ï–ù–ò–ò –ù–û–í–û–ì–û –£–í–õ–ï–ß–ï–ù–ò–Ø

async def hobby_succesful_added(user_tg_id, message_id, bot):

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –∏–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']
    self_hobbies = user_info['hobbies']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\n‚úÖ –£–≤–ª–µ—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!'
            ),
            parse_mode='HTML'
        )
    )

    await asyncio.sleep(1.5)

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{self_hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\nüí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —á–∞—Ç, '
                '—á—Ç–æ–±—ã —è –º–æ–≥ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å.'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back
    )
