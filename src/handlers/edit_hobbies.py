import asyncio
import logging
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram import F, Router, Bot
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from src.modules.notifications import attention_message
from src.modules.delete_messages import del_last_message
from src.modules.hobbies_list import hobbies_list
from src.database.requests.user_data import get_self_data
from src.database.requests.hobbies_data import check_hobby, delete_hobby
from src.modules.check_gender import check_gender
from src.handlers.edit_name import check_emodji
import src.modules.keyboard as kb

router = Router()


class Registration(StatesGroup):
    hobby = State()
    hobby_del = State()


delete_messages = []
delete_last_message = []


# –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ö–æ–±–±–∏ –∏ –≤—ã–≤–æ–¥ —Å –∫–Ω–æ–ø–∫–æ–π —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –±–µ–∑

async def check_hobbies_list(user_tg_id, callback):

    data = await asyncio.to_thread(get_self_data, user_tg_id)
    hobbies = await hobbies_list(data[1])

    if hobbies == '-':
        try:
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=f'{data[0][1]}',
                    caption='\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π –ø—É—Å—Ç ü§∑‚Äç‚ôÇÔ∏è</b>',
                    parse_mode='HTML'
                ),
                reply_markup=kb.no_hobbies)
        except:
            await callback.message.answer_photo(
                photo=f'{data[0][1]}',
                caption='\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π –ø—É—Å—Ç ü§∑‚Äç‚ôÇÔ∏è</b>',
                parse_mode='HTML',
                reply_markup=kb.no_hobbies)
    else:
        try:
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=f'{data[0][1]}',
                    caption=(
                        f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.edit_hobbies)
        except:
            await callback.message.answer_photo(
                photo=f'{data[0][1]}',
                caption=(
                    f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                ),
                parse_mode='HTML',
                reply_markup=kb.edit_hobbies)


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–ª–µ—á–µ–Ω–∏–π


@router.callback_query(F.data == 'edit_hobbies')
async def edit_hobbies(callback: CallbackQuery, state: FSMContext):
    await state.clear()

    user_tg_id = callback.from_user.id
    await check_hobbies_list(user_tg_id, callback)

# –ú–µ–Ω—é "–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ö–æ–±–±–∏"


@router.callback_query(F.data == 'new_hobby')
async def new_hobby(callback: CallbackQuery, state: FSMContext):
    await new_hobby_menu(callback, state)
    await state.update_data(message_id=callback.message.message_id)
    await state.set_state(Registration.hobby)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ö–æ–±–±–∏


@router.message(Registration.hobby)
async def add_hobby(message: Message, state: FSMContext, bot: Bot):
    await del_last_message(message)

    user_tg_id = message.from_user.id
    message_data = await state.get_data()
    message_id = message_data.get('message_id')

    if message.content_type == 'text' and len(message.text) <= 50:
        hobby = message.text.lower()
        emodji_checked = await check_emodji(hobby)

        if not emodji_checked:
            await wrong_hobby_name(user_tg_id, message_id, bot)
            return

        checked = await asyncio.to_thread(check_hobby, user_tg_id, hobby)

        if not checked:
            await hobby_already_exist(user_tg_id, message_id, bot)
            return

        else:
            await hobby_succesful_added(user_tg_id, message_id, bot)

    else:
        await wrong_hobby_name(user_tg_id, message_id, bot)
        return

# –ú–µ–Ω—é —É–¥–∞–ª–µ–Ω–∏—è —Ö–æ–±–±–∏


@router.callback_query(F.data == 'del_hobby')
async def del_hobby(callback: CallbackQuery):
    user_tg_id = callback.from_user.id
    await check_hobby_to_delete(user_tg_id, callback)

# –£–¥–∞–ª–µ–Ω–∏–µ —Ö–æ–±–±–∏


@router.callback_query(F.data.startswith('remove_hobby:'))
async def handle_remove_hobby(callback: CallbackQuery):
    user_tg_id = callback.from_user.id

    # –ø–æ–ª—É—á–µ–Ω–Ω—ã–π id –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –≤ int
    hobby_id = int(callback.data.split(':')[1])

    # —É–¥–∞–ª—è—é —Ö–æ–±–±–∏ –∏–∑ –±–¥
    await asyncio.to_thread(delete_hobby, user_tg_id, hobby_id)

    # –ø—Ä–æ–≤–µ—Ä—è—é —Å–ø–∏—Å–æ–∫ —Ö–æ–±–±–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤–µ—Ä–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    await check_hobby_to_delete(user_tg_id, callback)
    await attention_message(callback.message, '–£–≤–ª–µ—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ ‚úÖ', 1)


# –õ–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ö–æ–±–±–∏

async def check_hobby_to_delete(user_tg_id, callback):

    data = await asyncio.to_thread(get_self_data, user_tg_id)
    hobbies_data = data[1]
    hobbies = await hobbies_list(data[1])

    if hobbies == '-':

        try:

            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=f'{data[0][1]}',
                    caption='<b> \n–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π –ø—É—Å—Ç ü§∑‚Äç‚ôÇÔ∏è</b>',
                    parse_mode='HTML'
                ),
                reply_markup=kb.no_hobbies)
        except:
            await callback.message.answer_photo(
                photo=f'{data[0][1]}',
                caption='<b> \n–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π –ø—É—Å—Ç ü§∑‚Äç‚ôÇÔ∏è</b>',
                parse_mode='HTML',
                reply_markup=kb.no_hobbies)
    else:

        try:
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=f'{data[0][1]}',
                    caption=(
                        f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.delete_hobbies_keyboard(user_tg_id, hobbies_data))

        except:
            await callback.message.answer_photo(
                photo=f'{data[0][1]}',
                caption=(
                    f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                ),
                parse_mode='HTML',
                reply_markup=kb.delete_hobbies_keyboard(user_tg_id, hobbies_data))


# –ú–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ö–æ–±–±–∏

async def new_hobby_menu(callback, state):

    user_tg_id = callback.from_user.id
    data = await asyncio.to_thread(get_self_data, user_tg_id)
    hobbies = await hobbies_list(data[1])

    try:
        await callback.message.edit_media(
            media=InputMediaPhoto(
                media=f'{data[0][1]}',
                caption=(
                    f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                    '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                    '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                    '\n\nüí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —á–∞—Ç, '
                    '—á—Ç–æ–±—ã —è –º–æ–≥ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å.'
                ),
                parse_mode='HTML'
            ),
            reply_markup=kb.back_hobbies
        )
    except:
        await callback.message.answer_photo(
            photo=f'{data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\nüí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —á–∞—Ç, '
                '—á—Ç–æ–±—ã —è –º–æ–≥ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å.'
            ),
            parse_mode='HTML',
            reply_markup=kb.back_hobbies
        )

    await state.set_state(Registration.hobby)


# –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö

async def wrong_hobby_name(user_tg_id, message_id, bot):

    data = await asyncio.to_thread(get_self_data, user_tg_id)
    hobbies = await hobbies_list(data[1])

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\n‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö</b> ‚ö†Ô∏è'
            ),
            parse_mode='HTML'
        )
    )

    await asyncio.sleep(1.5)

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\n‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —É–≤–ª–µ—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å <b>—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç</b>'
                ', –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —ç–º–æ–¥–∑–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∞ —Ç–∞–∫ –∂–µ '
                '–Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å –¥–ª–∏–Ω–Ω—É –≤ <b>50 —Å–∏–º–≤–æ–ª–æ–≤</b>.'
                '\n\nüí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —á–∞—Ç, '
                '—á—Ç–æ–±—ã —è –º–æ–≥ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å.'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back
    )


async def hobby_already_exist(user_tg_id, message_id, bot):

    data = await asyncio.to_thread(get_self_data, user_tg_id)
    hobbies = await hobbies_list(data[1])

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\n‚ùå –¢–∞–∫–æ–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ'
            ),
            parse_mode='HTML'
        )
    )

    await asyncio.sleep(2)

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\nüí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —á–∞—Ç, '
                '—á—Ç–æ–±—ã —è –º–æ–≥ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å.'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back
    )


# –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ö–æ–±–±–∏

async def hobby_succesful_added(user_tg_id, message_id, bot):

    data = await asyncio.to_thread(get_self_data, user_tg_id)
    hobbies = await hobbies_list(data[1])

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\n‚úÖ –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!'
            ),
            parse_mode='HTML'
        )
    )

    await asyncio.sleep(1.5)

    await bot.edit_message_media(
        chat_id=user_tg_id,
        message_id=message_id,
        media=InputMediaPhoto(
            media=f'{data[0][1]}',
            caption=(
                f'\n<b>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π:</b>{hobbies}'
                '\n\n‚ÄºÔ∏è <u>–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø–∞</u>:'
                '\n<b>–û–¥–Ω–æ —É–≤–ª–µ—á–µ–Ω–∏–µ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>'
                '\n\nüí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —á–∞—Ç, '
                '—á—Ç–æ–±—ã —è –º–æ–≥ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å.'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back
    )
