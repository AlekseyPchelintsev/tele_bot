import asyncio
from aiogram import Bot
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram import F, Router
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from config import no_photo_id
from src.modules.get_self_data import get_user_info
from src.modules.delete_messages import del_last_message
from src.handlers.for_admin.check_users_photos import check_new_photo_user
from src.database.requests.photo_data import (update_user_photo,
                                              delete_user_photo)

import src.modules.keyboard as kb

router = Router()


class Registration(StatesGroup):
    new_photo = State()


delete_messages = []
delete_last_message = []


# –ú–ï–ù–Æ "–†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ –§–û–¢–û"

@router.callback_query(F.data == 'edit_photo')
async def edit_photo_menu(callback: CallbackQuery, state: FSMContext):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –æ—á–∏—â–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    await state.clear()

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']
    self_photo = self_data[0][1]

    # –ø–æ–≤–µ—Ä—è—é –Ω–µ —è–≤–ª—è–µ—Ç—Å—è id —Ñ–æ—Ç–æ –≤ –±–∞–∑–µ id –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    if self_photo == no_photo_id:

        try:

            # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–µ–∑ –∫–Ω–æ–ø–∫–∏ "—É–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ"
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=f'{self_photo}',
                    caption=(
                        '<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.edit_no_photo
            )

        except:

            await callback.message.answer_photo(
                photo=f'{self_photo}',
                caption=(
                    '<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>'
                ),
                parse_mode='HTML',
                reply_markup=kb.edit_no_photo
            )

    # –µ—Å–ª–∏ id —Ñ–æ—Ç–æ –≤ –±–∞–∑–µ –Ω–µ —Ä–∞–≤–Ω—è–µ—Ç—Å—è id –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    else:

        try:

            # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∫–Ω–æ–ø–∫–æ–π "—É–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ"
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=f'{self_photo}',
                    caption=(
                        '<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.edit_photo
            )

        except:

            await callback.message.answer_photo(
                photo=f'{self_photo}',
                caption=(
                    '<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>'
                ),
                parse_mode='HTML',
                reply_markup=kb.edit_photo
            )


# –ú–ï–ù–Æ –ó–ê–ì–†–£–ó–ö–ò –ù–û–í–û–ì–û –§–û–¢–û

@router.callback_query(F.data == 'new_photo')
async def edit_photo(callback: CallbackQuery, state: FSMContext):

    # –æ–ø–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    self_data = user_info['data']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    edit_message = await callback.message.edit_media(
        media=InputMediaPhoto(
            media=f'{self_data[0][1]}',
            caption=(
                '\n\nüí¨ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ –≤ —á–∞—Ç:</b>'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.back_to_photo
    )

    # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ id —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await state.update_data(message_id=edit_message.message_id)

    # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ç–æ–≥–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.set_state(Registration.new_photo)


# –°–û–°–¢–û–Ø–ù–ò–ï –û–ñ–ò–î–ê–ù–ò–Ø –ù–û–í–û–ì–û –§–û–¢–û –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø

@router.message(Registration.new_photo)
async def get_new_photo(message: Message, state: FSMContext, bot: Bot):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = message.from_user.id

    # –ø–æ–ª—É—á–∞—é id —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏
    message_data = await state.get_data()
    message_id = message_data.get('message_id')

    # –≤–Ω–æ—à—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–¥ —Å –Ω–æ–≤—ã–º —Ñ–æ—Ç–æ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await add_new_photo(user_tg_id, message, message_id, state, bot)


# –û–ë–ù–û–í–õ–ï–ù–ò–ï –§–û–¢–û –ü–†–û–§–ò–õ–Ø (–î–û–ë–ê–í–õ–ï–ù–ò–ï –í –ë–î –ò –û–¢–†–ò–°–û–í–ö–ê –°–¢–†–ê–ù–ò–¶–´)

async def add_new_photo(user_tg_id, message, message_id, state, bot):

    # —É–¥–∞–ª—è—é –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ñ–æ—Ç–æ –∏–∑ —á–∞—Ç–∞
    await del_last_message(message)

    # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–æ—Ç–æ
    if message.photo:

        # –ø–æ–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        user_info = await get_user_info(user_tg_id)

        # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        self_data = user_info['data']
        self_gender = user_info['gender']
        self_hobbies = user_info['hobbies']

        # –ø–æ–ª—É—á–∞—é id –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ([-1] - –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ)
        photo_id = message.photo[-1].file_id

        # –≤–Ω–æ—à—É –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ –≤ –±–¥
        await asyncio.to_thread(update_user_photo, user_tg_id, photo_id)

        # –ø–æ–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
        user_info = await get_user_info(user_tg_id)

        # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
        self_data = user_info['data']
        self_photo = self_data[0][1]
        self_name = self_data[0][0]
        self_age = self_data[0][4]
        self_city = self_data[0][5]
        self_gender = user_info['gender']
        self_hobbies = user_info['hobbies']
        about_me = user_info['about_me']
        # —É—á–µ–±–∞/—Ä–∞–±–æ—Ç–∞
        employment = user_info['employment']
        employment_info = user_info['employment_info']

        # –æ—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–æ—Ç–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é
        info_text = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–∏–ª —Å–≤–æ–µ —Ñ–æ—Ç–æ'
        await check_new_photo_user(photo_id,
                                   self_gender,
                                   self_name,
                                   self_age,
                                   self_city,
                                   user_tg_id,
                                   bot,
                                   info_text)

        # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await bot.edit_message_media(
            chat_id=user_tg_id,
            message_id=message_id,
            media=InputMediaPhoto(
                media=f'{self_photo}',
                caption=(
                    f'{self_gender}'  # –ø–æ–ª
                    f' ‚Ä¢ {self_name}'  # –∏–º—è
                    f' ‚Ä¢ {self_age}'  # –≤–æ–∑—Ä–∞—Å—Ç
                    f' ‚Ä¢ {self_city}'  # –≥–æ—Ä–æ–¥
                    f'\n‚ñ∫ <b>{employment}:</b> {employment_info}'
                    f'\n‚ñ∫ <b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
                    f'\n‚ñ∫ <b>–û —Å–µ–±–µ:</b> {about_me}'
                    '\n\n‚úÖ –§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑–º–µ–Ω–µ–Ω–æ'
                    '\n\n<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:</b>'
                ),
                parse_mode='HTML'
            ),
            reply_markup=kb.about_me
        )

        # –æ—á–∏—â–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()

    # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ç–æ
    else:

        # –ø–æ–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
        user_info = await get_user_info(user_tg_id)

        # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
        self_data = user_info['data']
        self_photo = self_data[0][1]

        # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        try:
            await bot.edit_message_media(
                chat_id=user_tg_id,
                message_id=message_id,
                media=InputMediaPhoto(
                    media=f'{self_photo}',
                    caption=(
                        '‚ö†Ô∏è <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö</b> ‚ö†Ô∏è'
                        '\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>.jpg .jpeg</b> '
                        '–∏–ª–∏ <b>.png</b>'
                    ),
                    parse_mode='HTML'
                ),
                reply_markup=kb.back_to_photo
            )
        except Exception as e:
            pass

        return


# –£–î–ê–õ–ï–ù–ò–ï –§–û–¢–û –ü–†–û–§–ò–õ–Ø (–£–î–ê–õ–ï–ù–ò–ï –ò–ó –ë–î –ò –û–¢–†–ò–°–û–í–ö–ê –°–¢–†–ê–ù–ò–¶–´)

@router.callback_query(F.data == 'del_photo')
async def delete_profile_photo(callback: CallbackQuery):

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–π id
    user_tg_id = callback.from_user.id

    # —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –∏–∑ –±–¥ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ id "–∑–∞–≥–ª—É—à–∫–∏" —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    await asyncio.to_thread(delete_user_photo, user_tg_id)

    # –ø–æ–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    user_info = await get_user_info(user_tg_id)

    # –ò–∑–≤–ª–µ–∫–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    self_data = user_info['data']
    self_photo = self_data[0][1]
    self_name = self_data[0][0]
    self_age = self_data[0][4]
    self_city = self_data[0][5]
    self_gender = user_info['gender']
    self_hobbies = user_info['hobbies']
    about_me = user_info['about_me']
    # —É—á–µ–±–∞/—Ä–∞–±–æ—Ç–∞
    employment = user_info['employment']
    employment_info = user_info['employment_info']

    # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    await callback.message.edit_media(
        media=InputMediaPhoto(
            media=f'{self_photo}',
            caption=(
                f'{self_gender}'  # –ø–æ–ª
                f' ‚Ä¢ {self_name}'  # –∏–º—è
                f' ‚Ä¢ {self_age}'  # –≤–æ–∑—Ä–∞—Å—Ç
                f' ‚Ä¢ {self_city}'  # –≥–æ—Ä–æ–¥
                f'\n‚ñ∫ <b>{employment}:</b> {employment_info}'
                f'\n‚ñ∫ <b>–£–≤–ª–µ—á–µ–Ω–∏—è:</b> {self_hobbies}'
                f'\n‚ñ∫ <b>–û —Å–µ–±–µ:</b> {about_me}'
                '\n\n‚úÖ –§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è —É–¥–∞–ª–µ–Ω–æ'
                '\n\n<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:</b>'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.about_me
    )
