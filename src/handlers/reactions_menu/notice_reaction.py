import asyncio
from config import delete_profile_id
from aiogram import Bot
from aiogram.types import CallbackQuery, InputMediaPhoto
from aiogram import F, Router
from src.modules.notifications import (bot_send_message_about_like,
                                       bot_send_message_matchs_likes,
                                       notification_to_late_incoming_reaction)

from src.database.requests.likes_users import (insert_reaction,
                                               get_reaction,
                                               delete_and_insert_reactions)

import src.modules.keyboard as kb


router = Router()


# –í—Ö–æ–¥—è—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–∞–∫—Ü–∏–∏


# –ø–∏–Ω–∏–º–∞–µ–º —Ä–µ–∞–∫—Ü–∏—é
@router.callback_query(F.data.startswith('accept_request:'))
async def accept_incoming_request_alert(callback: CallbackQuery, bot: Bot):

    user_tg_id = callback.from_user.id
    current_user_id = callback.data.split(':')[1]
    check = await asyncio.to_thread(get_reaction, current_user_id, user_tg_id)

    if check:
        await asyncio.to_thread(insert_reaction, user_tg_id, current_user_id)
        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥–æ–º—É —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã
        await bot_send_message_matchs_likes(user_tg_id, current_user_id, bot, callback)

        # —É–¥–∞–ª–µ–Ω–∏–µ –≤–∑–∞–∏–º–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã userreactions –∏
        # –≤–Ω–µ—Å–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É matchreactions
        # –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ "–ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"
        await asyncio.to_thread(delete_and_insert_reactions,
                                user_tg_id,
                                current_user_id)

        await callback.message.delete()

    else:
        await asyncio.to_thread(insert_reaction, user_tg_id, current_user_id)
        await bot_send_message_about_like(user_tg_id, current_user_id, bot)
        await callback.message.edit_media(media=InputMediaPhoto(
            media=delete_profile_id,
            caption=(
                '<b>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</b> ü´§\n\n'
                '<b>–í–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥—É–º–∞–ª –∏ —É–¥–∞–ª–∏–ª —Å–≤–æ—é —Ä–µ–∞–∫—Ü–∏—é</b> üòî\n\n'
                '<i>–ù–æ –º—ã –≤—Å–µ —Ä–∞–≤–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –µ–º—É –≤–∞—à—É üòâ</i>'
            ),
            parse_mode='HTML'
        ),
            reply_markup=kb.error_add_to_contacts
        )


# –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –Ω–∞ –ø–æ—Ç–æ–º
@router.callback_query(F.data.startswith('accept_late:'))
async def accept_late_incoming_request_alert(callback: CallbackQuery):
    user_tg_id = callback.from_user.id
    current_user_id = callback.data.split(':')[1]
    check = await asyncio.to_thread(get_reaction, current_user_id, user_tg_id)

    if check:
        await notification_to_late_incoming_reaction(callback.message)
    else:
        await callback.message.edit_media(media=InputMediaPhoto(
            media=delete_profile_id,
            caption=(
                '<b>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</b> ü´§\n\n'
                '<b>–í–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ª—É—á–∞–π–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º —Ä–µ–∞–∫—Ü–∏—é\n'
                '–∏ —É–∂–µ —É–¥–∞–ª–∏–ª –µ–µ</b> ü§∑‚Äç‚ôÇÔ∏è'
            ),
            parse_mode='HTML'
        ),
            reply_markup=kb.error_add_to_contacts
        )


# –∑–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
@router.callback_query(F.data == 'close_notification')
async def close_notice(callback: CallbackQuery):
    await callback.message.delete()
