import asyncio
from config import in_progress
from aiogram import Bot
from aiogram.types import CallbackQuery, Message
from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from src.handlers.reactions_menu.notice_reaction import bot_send_message_about_like, bot_notification_about_dislike, bot_send_message_matchs_likes
from src.modules.pagination_logic import (no_data_after_reboot_bot_reactions,
                                          back_callback,
                                          load_pagination_start_or_end_data)

from src.modules.notifications import attention_message

from src.database.requests.user_data import check_user
from src.database.requests.likes_users import (insert_reaction,
                                               get_reaction,
                                               delete_reaction,
                                               delete_and_insert_reactions,
                                               send_user_to_ignore_table,
                                               delete_from_my_contacts,
                                               remove_user_from_ignore_table)

import src.modules.keyboard as kb


router = Router()


# –ø—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –ª–∞–π–∫–∞/–¥–∏–∑–ª–∞–π–∫–∞/—É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤/—É–¥–∞–¥–µ–Ω–∏—è –∏–∑ –∏–≥–Ω–æ—Ä–∞
async def reload_reaction_pagination_after_hide_or_like(callback,
                                                        user_tg_id,
                                                        data,
                                                        keyboard,
                                                        list_type,
                                                        page):

    # —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ data
    data.pop(page)

    # –µ—Å–ª–∏ False (data –ø—É—Å—Ç–∞—è)
    if not data:

        # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        text_info = '<b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç</b> ü§∑‚Äç‚ôÇÔ∏è'
        await back_callback(callback.message,
                            user_tg_id,
                            'back_reactions',
                            'reactions',
                            text_info)

    # –µ—Å–ª–∏ True (data –Ω–µ –ø—É—Å—Ç–∞—è)
    else:
        total_pages = len(data)
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if page >= len(data):

            # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –µ—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã
            page = len(data) - 1

            # –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É—á–µ—Ç–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
        await load_pagination_start_or_end_data(callback.message,
                                                data,
                                                keyboard,
                                                list_type,
                                                total_pages,
                                                page=page)


# –ü–∞–≥–∏–Ω–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ "–ú–æ–∏ —Ä–µ–∞–∫—Ü–∏–∏"
@router.callback_query(
    kb.PaginationLikes.filter(F.action.in_(
        ['prev_likes',
         'next_likes',
         'menu_likes',
         'in_reactions_like',
         'in_reactions_dislike',
         'delete_incoming',
         'delete_contact',
         'remove_from_ignore']))
)
async def pagination_handler_likes(
    callback: CallbackQuery,
    callback_data: kb.PaginationLikes,
    state: FSMContext,
    bot: Bot
):
    user_tg_id = callback.message.chat.id
    list_type = callback_data.list_type

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ list_type –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

    if list_type == 'my_like_users':
        keyboard = 'paginator_likes'
    elif list_type == 'incoming_like_users':
        keyboard = 'incoming_reactions'
    elif list_type == 'match_like_users':
        keyboard = 'match_reactions_pagination'
    elif list_type == 'ignore_users_list':
        keyboard = 'ignored_users_pagination'

    # –ø–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    users_data = await state.get_data()
    data = users_data.get('users_data')

    # –µ—Å–ª–∏ –±–æ—Ç —É—à–µ–ª –≤ —Ä–µ–±—É—Ç —Å –æ—Ç–∫—Ä—ã—Ç–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç
    if not data:

        print(f'–°–†–ê–ë–û–¢–ê–õ –ë–õ–û–ö IF NOT DATA –í –ü–ê–ì–ò–ù–ê–¶–ò–ò –†–ï–ê–ö–¶–ò–ô: {data}')
        await no_data_after_reboot_bot_reactions(callback, 'back_reactions')

    else:

        # –¥–ª–∏–Ω–Ω–∞ data –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
        total_pages = len(data)

        page_num = int(callback_data.page)

        if callback_data.action == 'prev_likes':
            page = max(page_num - 1, 0)
        elif callback_data.action == 'next_likes':
            page = min(page_num + 1, len(data) - 1)
        else:
            page = page_num

            # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –≤ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        current_user_id = data[page][0]

        # –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        if callback_data.action == 'menu_likes':

            # –í—ã—Ö–æ–¥ –∏–∑ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (—á–µ—Ç–≤–µ—Ä—Ç—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä - —Ç–µ–∫—Å—Ç –ø–æ–¥ –∏–Ω—Ñ–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π))
            menu_text = '<b>–†–∞–∑–¥–µ–ª –≤–∞—à–∏—Ö —Ä–µ–∞–∫—Ü–∏–π:</b>'
            await back_callback(callback.message,
                                user_tg_id,
                                'reactions',
                                'reactions',
                                menu_text)

        # –ë–ª–æ–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–±—ç–∫ "incoming_reactions" / "–í—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã"

        # –ø—Ä–∏–µ–º –∑–∞–ø—Ä–æ—Å–∞ –≤ "–í—Ö–æ–¥—è—â–∏–µ —Ä–µ–∞–∫—Ü–∏–∏"
        elif callback_data.action == 'in_reactions_like':

            check = await asyncio.to_thread(get_reaction, current_user_id, user_tg_id)

            if check:

                # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –≤ –±–¥
                await asyncio.to_thread(insert_reaction, user_tg_id, current_user_id)

                # —É–¥–∞–ª–µ–Ω–∏–µ –≤–∑–∞–∏–º–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã userreactions –∏
                # –≤–Ω–µ—Å–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É matchreactions
                # –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ "–ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"
                await asyncio.to_thread(delete_and_insert_reactions,
                                        user_tg_id,
                                        current_user_id)

                # —É–¥–∞–ª–µ–Ω–∏–µ –¥–∏–∑–ª–∞–π–∫–Ω—É—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ data –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –±–µ–∑ –Ω–µ–≥–æ
                await reload_reaction_pagination_after_hide_or_like(callback,
                                                                    user_tg_id,
                                                                    data,
                                                                    keyboard,
                                                                    list_type,
                                                                    page)

                # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥–æ–º—É —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã
                await bot_send_message_matchs_likes(user_tg_id,
                                                    current_user_id,
                                                    bot)

            else:

                # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –≤ –±–¥
                await asyncio.to_thread(insert_reaction, user_tg_id, current_user_id)

                # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await bot_send_message_about_like(user_tg_id, current_user_id, bot)

                # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ data –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –±–µ–∑ –Ω–µ–≥–æ
                await reload_reaction_pagination_after_hide_or_like(callback,
                                                                    user_tg_id,
                                                                    data,
                                                                    keyboard,
                                                                    list_type,
                                                                    page)

                # —Å–æ–æ–±—â–µ–Ω–∏–µ "–º–Ω–µ"
                await callback.message.answer_photo(photo=in_progress,
                                                    caption=(
                                                        '<b>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</b> ü´§\n\n'
                                                        '<b>–í–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥—É–º–∞–ª –∏ —É–¥–∞–ª–∏–ª —Å–≤–æ—é —Ä–µ–∞–∫—Ü–∏—é</b> üòî\n\n'
                                                        '<i>–ù–æ –º—ã –≤—Å–µ —Ä–∞–≤–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –µ–º—É –≤–∞—à—É üòâ</i>'
                                                    ),
                                                    parse_mode='HTML',
                                                    reply_markup=kb.error_add_to_contacts
                                                    )

        # –æ—Ç–∫–∞–∑ –æ—Ç –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ "–í—Ö–æ–¥—è—â–∏–µ —Ä–µ–∞–∫—Ü–∏–∏"
        elif callback_data.action == 'delete_incoming':

            # —É–¥–∞–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –∏–∑ –±–¥ –∏ –≤—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            # –ø–µ—Ä–µ–¥–∞—é id –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
            delete = await asyncio.to_thread(delete_reaction, current_user_id, user_tg_id)

            if delete:
                # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ ignorelist
                await asyncio.to_thread(send_user_to_ignore_table, user_tg_id, current_user_id)

                # —É–¥–∞–ª–µ–Ω–∏–µ –¥–∏–∑–ª–∞–π–∫–Ω—É—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ data –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –±–µ–∑ –Ω–µ–≥–æ
                await reload_reaction_pagination_after_hide_or_like(callback,
                                                                    user_tg_id,
                                                                    data,
                                                                    keyboard,
                                                                    list_type,
                                                                    page)

                await bot_notification_about_dislike(callback.message,
                                                     '‚ùóÔ∏è <b>–†–µ–∞–∫—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.</b>\n'
                                                     '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª:\n'
                                                     '"üö∑ <b>–°–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>"')

            else:
                await bot_notification_about_dislike(callback.message,
                                                     'üöß <b>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ</b> üöß')

        # –æ—Ç–º–µ–Ω–∞ –º–æ–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ "–ú–æ–∏ —Ä–µ–∞–∫—Ü–∏–∏"
        elif callback_data.action == 'in_reactions_dislike':

            # —É–¥–∞–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –∏–∑ –±–¥
            await asyncio.to_thread(delete_reaction, user_tg_id, current_user_id)

            # —É–¥–∞–ª–µ–Ω–∏–µ –¥–∏–∑–ª–∞–π–∫–Ω—É—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ data –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –±–µ–∑ –Ω–µ–≥–æ
            await reload_reaction_pagination_after_hide_or_like(callback,
                                                                user_tg_id,
                                                                data,
                                                                keyboard,
                                                                list_type,
                                                                page)

            # –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            await bot_notification_about_dislike(callback.message,
                                                 'üö´ <b>–†–µ–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!</b>')

        # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ "–ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"
        elif callback_data.action == 'delete_contact':

            # —É–¥–∞–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –∏–∑ –±–¥ (matchreactions) –∏ –≤—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            await asyncio.to_thread(delete_from_my_contacts, user_tg_id, current_user_id)

            # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ ignorelist
            await asyncio.to_thread(send_user_to_ignore_table, user_tg_id, current_user_id)

            # —É–¥–∞–ª–µ–Ω–∏–µ –¥–∏–∑–ª–∞–π–∫–Ω—É—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ data –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –±–µ–∑ –Ω–µ–≥–æ
            await reload_reaction_pagination_after_hide_or_like(callback,
                                                                user_tg_id,
                                                                data,
                                                                keyboard,
                                                                list_type,
                                                                page)

            # –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            await bot_notification_about_dislike(callback.message,
                                                 '‚ùóÔ∏è <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –≤–∞—à–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</b>\n'
                                                 '–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª:\n'
                                                 '"üö∑ <b>–°–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>"')

        # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ "–°–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
        elif callback_data.action == 'remove_from_ignore':

            # —É–¥–∞–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –∏–∑ –±–¥ (matchreactions)
            await asyncio.to_thread(remove_user_from_ignore_table, user_tg_id, current_user_id)

            # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ data –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –±–µ–∑ –Ω–µ–≥–æ
            await reload_reaction_pagination_after_hide_or_like(callback,
                                                                user_tg_id,
                                                                data,
                                                                keyboard,
                                                                list_type,
                                                                page)

            # –≤—ã–≤–æ–∂—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            await bot_notification_about_dislike(callback.message,
                                                 '‚ò∫Ô∏è <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ø–æ–∏—Å–∫–µ!</b>')

        # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
        else:

            await load_pagination_start_or_end_data(callback.message,
                                                    data,
                                                    keyboard,
                                                    list_type,
                                                    total_pages,
                                                    page=page)

    await callback.answer()


# –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —á–∞—Ç–∞ (—ç—Ç–æ—Ç —Ñ–∞–π–ª —Å–∞–º–∞—è –Ω–∏–∂–Ω—è—è —Ç–æ—á–∫–∞ –≤ –∏–µ—Ä–∞—Ä—Ö–∏–∏)

'''
F.text ‚Äì regular text message (this has already been done)
F.photo ‚Äì message with photo
F.video ‚Äì message with video
F.animation ‚Äì message with animation (gifs)
F.contact ‚Äì message sending contact details (very useful for FSM)
F.document ‚Äì a message with a file (there may also be a photo if it is sent as a document)
F.data ‚Äì message with CallData (this was processed in the previous article).
'''


@router.message(F.text | F.photo | F.video | F.animation |
                F.contact | F.document | F.sticker)
async def handle_random_message(message: Message):
    await message.delete()
    user_tg_id = message.from_user.id
    data = await asyncio.to_thread(check_user, user_tg_id)

    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
    if data:
        await attention_message(message, '‚ö†Ô∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –ø–µ—Ä–µ–π–¥–∏—Ç–µ '
                                '–≤ —Ä–∞–∑–¥–µ–ª <b>"—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"</b>', 3)
    else:
        await attention_message(message, '‚ö†Ô∏è –ß—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Å–µ—Ä–≤–∏—Å–æ–º, '
                                '–≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ <b>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</b>', 3)
