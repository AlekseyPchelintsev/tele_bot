import asyncio
from aiogram.types import Message, CallbackQuery, InputMediaPhoto, InputMediaVideo
from aiogram import F, Router, Bot
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from config import city_search, hobby_search, exclude_text_message
from src.modules.moving_through_sections import check_menu_command
from src.modules.pagination_logic import no_data_after_reboot_bot_reactions
from src.handlers.search_users.hobby_search import search_users_by_hobby
from src.modules.delete_messages import del_last_message
from src.modules.get_self_data import get_user_info
from src.modules.check_emoji_and_markdown import check_emoji, check_all_markdown
from src.database.requests.search_users import (check_users_in_city)
from src.handlers.search_users.error_handlers_search import wrong_search_city_name

import src.modules.keyboard as kb


router = Router()


class Registration(StatesGroup):
    search_city = State()
    search_hobby = State()


delete_messages = []
delete_last_message = []


# ================================
# –ü–û–ò–°–ö –õ–Æ–î–ï–ô –ü–û –ì–û–†–û–î–ê–ú         |
# ================================


async def serach_users_by_city(callback, state):

    user_tg_id = callback.from_user.id

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
    user_info = await get_user_info(user_tg_id)
    city_data = user_info['data'][0][5]

    edit_message = await callback.message.edit_media(
        media=InputMediaPhoto(
            media=f'{city_search}',
            caption=(
                '\nüîé <b>–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ?</b>'
                '\n\nüìåüí¨ –ü—Ä–∏—à–ª–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞</b> –≤ —á–∞—Ç'
                '\n\nüìå‚å®Ô∏è –∏–ª–∏ <b>–≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤</b> –Ω–∏–∂–µ'
            ),
            parse_mode='HTML'
        ),
        reply_markup=kb.search_in_city(city_data)
    )

    await state.update_data(message_id=edit_message.message_id)
    await state.set_state(Registration.search_city)


# –ø–æ–∏—Å–∫ –≤ –º–æ–µ–º –≥–æ—Ä–æ–¥–µ –∏–ª–∏ –≤ –ª—é–±–æ–º


@router.callback_query(F.data.in_(['home_city', 'all_cities']))
async def search_in_city(callback: CallbackQuery, state: FSMContext):

    user_tg_id = callback.from_user.id
    search_data = callback.data

    # –ø–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    search_gender = await state.get_data()
    gender_data = search_gender.get('type_of_gender')

    # –ø–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ gender_data –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    if not gender_data:

        # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–µ—Ç
        # (–Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º)
        await no_data_after_reboot_bot_reactions(callback.message, 'search_users')

    else:

        if search_data == 'home_city':

            # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
            user_info = await get_user_info(user_tg_id)

            # –ò–∑–≤–ª–µ–∫–∞—é –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞
            city_data = user_info['data'][0][5]

            print(f'–í–´–ë–†–ê–ù –ü–û–ò–°–ö –í –ú–û–ï–ú –ì–û–†–û–î–ï')
            print(f'–î–ê–ù–ù–´–ï –ì–û–†–û–î–ê: {city_data}, –ü–û–õ–ê:{gender_data}')

            # –ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–º—É –ø–æ–ª—É –≤ —Å–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ
            check_home_city_users = await asyncio.to_thread(check_users_in_city,
                                                            user_tg_id,
                                                            city_data,
                                                            gender_data)

            if check_home_city_users:

                print(f'–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –í –ú–û–ï–ú –ì–û–†–û–î–ï –ü–û –ü–û–õ–£ –ù–ê–ô–î–ï–ù–´')

                # –¥–æ–±–∞–≤–ª—è—é –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞
                await state.update_data(city_users=city_data)
                await search_users_by_hobby(callback, state)

            else:

                print(f'–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –í –ú–û–ï–ú –ì–û–†–û–î–ï –ü–û –ü–û–õ–£ –ù–ï –ù–ê–ô–î–ï–ù–´')

                try:
                    await callback.message.edit_media(
                        media=InputMediaPhoto(
                            media=f'{city_search}',
                            caption=(
                                '\n<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</b> üòî'
                                '\n\nüìå‚å®Ô∏è –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø—É–Ω–∫—Ç <b>"–ù–µ –≤–∞–∂–Ω–æ"</b> '
                                '—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–æ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–∞—Ö'
                                '\n\nüìåüí¨ –∏–ª–∏ <b>–ø—Ä–∏—à–ª–∏—Ç–µ –≤ —á–∞—Ç</b> –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, '
                                '—á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –≤ –Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:'
                            ),
                            parse_mode='HTML'
                        ),
                        reply_markup=kb.search_in_city(city_data)
                    )
                except:
                    await callback.message.answer_photo(
                        photo=f'{city_search}',
                        caption=(
                            '\n<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</b> üòî'
                            '\n\nüìå‚å®Ô∏è –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø—É–Ω–∫—Ç <b>"–ù–µ –≤–∞–∂–Ω–æ"</b> '
                            '—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–æ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–∞—Ö'
                            '\n\nüìåüí¨ –∏–ª–∏ <b>–ø—Ä–∏—à–ª–∏—Ç–µ –≤ —á–∞—Ç</b> –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, '
                            '—á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –≤ –Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:'
                        ),
                        parse_mode='HTML',
                        reply_markup=kb.search_in_city(city_data)
                    )
                await state.set_state(Registration.search_city)

        elif search_data == 'all_cities':

            print('–í–´–ë–†–ê–ù –ü–û–ò–°–ö –ü–û –í–°–ï–ú –ì–û–†–û–î–ê–ú')

            await state.update_data(city_users='all')
            await search_users_by_hobby(callback, state)


# –ø–æ–∏—Å–∫ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≥–æ—Ä–æ–¥—É


@router.message(Registration.search_city)
async def search_by_city(message: Message, state: FSMContext, bot: Bot):

    print(f'–ù–ê–ó–í–ê–ù–ò–ï –ì–û–†–û–î–ê –û–¢–ü–†–ê–í–õ–ï–ù–û –í –ß–ê–¢')

    user_tg_id = message.from_user.id

    # –ø–ª—É—á–∞—é —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
    user_info = await get_user_info(user_tg_id)
    # –ò–∑–≤–ª–µ–∫–∞—é –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞
    city_data = user_info['data'][0][5]

    # —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –≤ —á–∞—Ç
    await del_last_message(message)

    # –ø–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    search_gender = await state.get_data()
    gender_data = search_gender.get('type_of_gender')

    # –ø–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ gender_data –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    if not gender_data:

        # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–µ—Ç
        # (–Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º)
        await no_data_after_reboot_bot_reactions(message, 'search_users')

    else:

        # –ø–æ–ª—É—á–∞—é id —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        edit_message = await state.get_data()
        message_id = edit_message.get('message_id')

        # –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ, –∞ –Ω–µ –º–µ–¥–∏–∞ (–∫–∞—Ä—Ç–∏–Ω–∫–∏, —Å—Ç–∏–∫–µ—Ä—ã –∏ —Ç.–¥.)
        if message.content_type == 'text':

            # –ø–æ–ª—É—á–∞—é —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Ä–µ–ø–ª–∞–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            city_name = message.text

            # –ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥ –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            if city_name not in exclude_text_message:

                # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–∞–Ω–¥ - –ø—Ä–æ–¥–æ–ª–∂–∞—é –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫—É
                city_name = message.text.title()

                # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–º–∞–π–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
                emodji_checked = await check_emoji(city_name)
                markdown_checked = await check_all_markdown(city_name)

                if emodji_checked or markdown_checked:
                    await wrong_search_city_name(user_tg_id, message_id, bot)
                    return

                # –ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–ª–æ–≤–∏—è–º
                check_users_city = await asyncio.to_thread(check_users_in_city,
                                                           user_tg_id,
                                                           city_name,
                                                           gender_data)

                if check_users_city:

                    await bot.edit_message_media(
                        chat_id=user_tg_id,
                        message_id=message_id,
                        media=InputMediaPhoto(
                            media=f'{hobby_search}',
                            caption=(
                                '\nüîé <b>–ö–∞–∫–∏–µ —É–≤–ª–µ—á–µ–Ω–∏—è?</b>'
                                '\n\nüìåüí¨ –ü—Ä–∏—à–ª–∏—Ç–µ <b>—É–≤–ª–µ—á–µ–Ω–∏–µ</b> –≤ —á–∞—Ç'
                                '\n\nüìå‚å®Ô∏è –∏–ª–∏ <b>–≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤</b> –Ω–∏–∂–µ'
                            ),
                            parse_mode='HTML'
                        ),
                        reply_markup=kb.hobbies_search
                    )

                    await state.update_data(city_users=city_name)
                    await state.set_state(Registration.search_hobby)

                else:

                    await bot.edit_message_media(
                        chat_id=user_tg_id,
                        message_id=message_id,
                        media=InputMediaPhoto(
                            media=f'{city_search}',
                            caption=(
                                '\nüîé <b>–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ?</b>'
                                f'\n\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –≥–æ—Ä–æ–¥–µ <b>"{
                                    city_name}"</b> '
                                '<u>–Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</u>'
                                '\n\nüìåüí¨ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –≤ <b>–¥—Ä—É–≥–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö</b>'
                                '\n\nüìå‚å®Ô∏è –∏–ª–∏ <b>–≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤</b> –Ω–∏–∂–µ'
                            ),
                            parse_mode='HTML'
                        ),
                        reply_markup=kb.search_in_city(city_data)
                    )

            # –µ—Å–ª–∏ –±—ã–ª–∞ –ø—Ä–∏—Å–ª–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            else:

                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –µ–µ –æ—á–∏—â–∞—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–∂—É
                # –≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ–º–∞–Ω–¥–µ
                await check_menu_command(user_tg_id, message, city_name, state)

        # –µ—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏–∏ –ø–æ–ª—É—á–µ–Ω –º–µ–¥–∏–∞ –∫–æ–Ω—Ç–µ–Ω—Ç –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞
        else:
            await wrong_search_city_name(user_tg_id, message_id, bot)
            return
